package com.cyan.entity;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;

@Component
public class PictureExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public PictureExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andPictureIdIsNull() {
			addCriterion("picture_id is null");
			return (Criteria) this;
		}

		public Criteria andPictureIdIsNotNull() {
			addCriterion("picture_id is not null");
			return (Criteria) this;
		}

		public Criteria andPictureIdEqualTo(Integer value) {
			addCriterion("picture_id =", value, "pictureId");
			return (Criteria) this;
		}

		public Criteria andPictureIdNotEqualTo(Integer value) {
			addCriterion("picture_id <>", value, "pictureId");
			return (Criteria) this;
		}

		public Criteria andPictureIdGreaterThan(Integer value) {
			addCriterion("picture_id >", value, "pictureId");
			return (Criteria) this;
		}

		public Criteria andPictureIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("picture_id >=", value, "pictureId");
			return (Criteria) this;
		}

		public Criteria andPictureIdLessThan(Integer value) {
			addCriterion("picture_id <", value, "pictureId");
			return (Criteria) this;
		}

		public Criteria andPictureIdLessThanOrEqualTo(Integer value) {
			addCriterion("picture_id <=", value, "pictureId");
			return (Criteria) this;
		}

		public Criteria andPictureIdIn(List<Integer> values) {
			addCriterion("picture_id in", values, "pictureId");
			return (Criteria) this;
		}

		public Criteria andPictureIdNotIn(List<Integer> values) {
			addCriterion("picture_id not in", values, "pictureId");
			return (Criteria) this;
		}

		public Criteria andPictureIdBetween(Integer value1, Integer value2) {
			addCriterion("picture_id between", value1, value2, "pictureId");
			return (Criteria) this;
		}

		public Criteria andPictureIdNotBetween(Integer value1, Integer value2) {
			addCriterion("picture_id not between", value1, value2, "pictureId");
			return (Criteria) this;
		}

		public Criteria andProductIdIsNull() {
			addCriterion("product_id is null");
			return (Criteria) this;
		}

		public Criteria andProductIdIsNotNull() {
			addCriterion("product_id is not null");
			return (Criteria) this;
		}

		public Criteria andProductIdEqualTo(Integer value) {
			addCriterion("product_id =", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdNotEqualTo(Integer value) {
			addCriterion("product_id <>", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdGreaterThan(Integer value) {
			addCriterion("product_id >", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("product_id >=", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdLessThan(Integer value) {
			addCriterion("product_id <", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdLessThanOrEqualTo(Integer value) {
			addCriterion("product_id <=", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdIn(List<Integer> values) {
			addCriterion("product_id in", values, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdNotIn(List<Integer> values) {
			addCriterion("product_id not in", values, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdBetween(Integer value1, Integer value2) {
			addCriterion("product_id between", value1, value2, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdNotBetween(Integer value1, Integer value2) {
			addCriterion("product_id not between", value1, value2, "productId");
			return (Criteria) this;
		}

		public Criteria andPictureNameIsNull() {
			addCriterion("picture_name is null");
			return (Criteria) this;
		}

		public Criteria andPictureNameIsNotNull() {
			addCriterion("picture_name is not null");
			return (Criteria) this;
		}

		public Criteria andPictureNameEqualTo(String value) {
			addCriterion("picture_name =", value, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameNotEqualTo(String value) {
			addCriterion("picture_name <>", value, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameGreaterThan(String value) {
			addCriterion("picture_name >", value, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameGreaterThanOrEqualTo(String value) {
			addCriterion("picture_name >=", value, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameLessThan(String value) {
			addCriterion("picture_name <", value, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameLessThanOrEqualTo(String value) {
			addCriterion("picture_name <=", value, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameLike(String value) {
			addCriterion("picture_name like", value, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameNotLike(String value) {
			addCriterion("picture_name not like", value, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameIn(List<String> values) {
			addCriterion("picture_name in", values, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameNotIn(List<String> values) {
			addCriterion("picture_name not in", values, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameBetween(String value1, String value2) {
			addCriterion("picture_name between", value1, value2, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPictureNameNotBetween(String value1, String value2) {
			addCriterion("picture_name not between", value1, value2, "pictureName");
			return (Criteria) this;
		}

		public Criteria andPathIsNull() {
			addCriterion("path is null");
			return (Criteria) this;
		}

		public Criteria andPathIsNotNull() {
			addCriterion("path is not null");
			return (Criteria) this;
		}

		public Criteria andPathEqualTo(String value) {
			addCriterion("path =", value, "path");
			return (Criteria) this;
		}

		public Criteria andPathNotEqualTo(String value) {
			addCriterion("path <>", value, "path");
			return (Criteria) this;
		}

		public Criteria andPathGreaterThan(String value) {
			addCriterion("path >", value, "path");
			return (Criteria) this;
		}

		public Criteria andPathGreaterThanOrEqualTo(String value) {
			addCriterion("path >=", value, "path");
			return (Criteria) this;
		}

		public Criteria andPathLessThan(String value) {
			addCriterion("path <", value, "path");
			return (Criteria) this;
		}

		public Criteria andPathLessThanOrEqualTo(String value) {
			addCriterion("path <=", value, "path");
			return (Criteria) this;
		}

		public Criteria andPathLike(String value) {
			addCriterion("path like", value, "path");
			return (Criteria) this;
		}

		public Criteria andPathNotLike(String value) {
			addCriterion("path not like", value, "path");
			return (Criteria) this;
		}

		public Criteria andPathIn(List<String> values) {
			addCriterion("path in", values, "path");
			return (Criteria) this;
		}

		public Criteria andPathNotIn(List<String> values) {
			addCriterion("path not in", values, "path");
			return (Criteria) this;
		}

		public Criteria andPathBetween(String value1, String value2) {
			addCriterion("path between", value1, value2, "path");
			return (Criteria) this;
		}

		public Criteria andPathNotBetween(String value1, String value2) {
			addCriterion("path not between", value1, value2, "path");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table picture
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table picture
     *
     * @mbg.generated do_not_delete_during_merge Sun Jan 28 18:44:57 EST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}