package com.cyan.entity;

import java.util.ArrayList;
import java.util.List;

public class CartExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public CartExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCartIdIsNull() {
			addCriterion("cart_id is null");
			return (Criteria) this;
		}

		public Criteria andCartIdIsNotNull() {
			addCriterion("cart_id is not null");
			return (Criteria) this;
		}

		public Criteria andCartIdEqualTo(Integer value) {
			addCriterion("cart_id =", value, "cartId");
			return (Criteria) this;
		}

		public Criteria andCartIdNotEqualTo(Integer value) {
			addCriterion("cart_id <>", value, "cartId");
			return (Criteria) this;
		}

		public Criteria andCartIdGreaterThan(Integer value) {
			addCriterion("cart_id >", value, "cartId");
			return (Criteria) this;
		}

		public Criteria andCartIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("cart_id >=", value, "cartId");
			return (Criteria) this;
		}

		public Criteria andCartIdLessThan(Integer value) {
			addCriterion("cart_id <", value, "cartId");
			return (Criteria) this;
		}

		public Criteria andCartIdLessThanOrEqualTo(Integer value) {
			addCriterion("cart_id <=", value, "cartId");
			return (Criteria) this;
		}

		public Criteria andCartIdIn(List<Integer> values) {
			addCriterion("cart_id in", values, "cartId");
			return (Criteria) this;
		}

		public Criteria andCartIdNotIn(List<Integer> values) {
			addCriterion("cart_id not in", values, "cartId");
			return (Criteria) this;
		}

		public Criteria andCartIdBetween(Integer value1, Integer value2) {
			addCriterion("cart_id between", value1, value2, "cartId");
			return (Criteria) this;
		}

		public Criteria andCartIdNotBetween(Integer value1, Integer value2) {
			addCriterion("cart_id not between", value1, value2, "cartId");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(Integer value) {
			addCriterion("user_id =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(Integer value) {
			addCriterion("user_id <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(Integer value) {
			addCriterion("user_id >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("user_id >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(Integer value) {
			addCriterion("user_id <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("user_id <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<Integer> values) {
			addCriterion("user_id in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<Integer> values) {
			addCriterion("user_id not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(Integer value1, Integer value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andCartSumIsNull() {
			addCriterion("cart_sum is null");
			return (Criteria) this;
		}

		public Criteria andCartSumIsNotNull() {
			addCriterion("cart_sum is not null");
			return (Criteria) this;
		}

		public Criteria andCartSumEqualTo(Double value) {
			addCriterion("cart_sum =", value, "cartSum");
			return (Criteria) this;
		}

		public Criteria andCartSumNotEqualTo(Double value) {
			addCriterion("cart_sum <>", value, "cartSum");
			return (Criteria) this;
		}

		public Criteria andCartSumGreaterThan(Double value) {
			addCriterion("cart_sum >", value, "cartSum");
			return (Criteria) this;
		}

		public Criteria andCartSumGreaterThanOrEqualTo(Double value) {
			addCriterion("cart_sum >=", value, "cartSum");
			return (Criteria) this;
		}

		public Criteria andCartSumLessThan(Double value) {
			addCriterion("cart_sum <", value, "cartSum");
			return (Criteria) this;
		}

		public Criteria andCartSumLessThanOrEqualTo(Double value) {
			addCriterion("cart_sum <=", value, "cartSum");
			return (Criteria) this;
		}

		public Criteria andCartSumIn(List<Double> values) {
			addCriterion("cart_sum in", values, "cartSum");
			return (Criteria) this;
		}

		public Criteria andCartSumNotIn(List<Double> values) {
			addCriterion("cart_sum not in", values, "cartSum");
			return (Criteria) this;
		}

		public Criteria andCartSumBetween(Double value1, Double value2) {
			addCriterion("cart_sum between", value1, value2, "cartSum");
			return (Criteria) this;
		}

		public Criteria andCartSumNotBetween(Double value1, Double value2) {
			addCriterion("cart_sum not between", value1, value2, "cartSum");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table cart
	 * @mbg.generated  Mon Feb 26 10:47:49 EST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cart
     *
     * @mbg.generated do_not_delete_during_merge Sun Jan 28 18:44:57 EST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}